{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juleo\\\\random-quote-machine\\\\src\\\\App.js\";\nimport React from 'react';\nimport { random } from 'lodash';\nimport './App.css';\nimport QuoteMachine from 'QuoteMachine';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [],\n      selectedQuoteIndex: null\n    };\n    this.selectQuoteIndex = this.generateQuoteIndex.bind(this);\n    this.assignNewQuoteIndex = this.assignNewQuoteIndex.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json').then(data => data.json()).then(quotes => this.setState({\n      quotes\n    }, this.assignNewQuoteIndex));\n  }\n\n  get selectedQuote() {\n    if (!this.state.quotes.length || !Number.isInteger(this.state.selectedQuoteIndex)) {\n      return undefined;\n    }\n\n    return this.state.quotes[this.state.selectedQuoteIndex];\n  }\n\n  generateQuoteIndex() {\n    if (!this.state.quotes.length) {\n      return;\n    }\n\n    return random(0, this.state.quotes.length - 1);\n  }\n\n  assignNewQuoteIndex() {\n    this.setState({\n      selectedQuoteIndex: this.generateQuoteIndex()\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      id: \"quote-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(QuoteMachine, {\n      selectedQuote: this.selectedQuote,\n      assignNewQuoteIndex: this.assignNewQuoteIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/juleo/random-quote-machine/src/App.js"],"names":["React","random","QuoteMachine","App","Component","constructor","props","state","quotes","selectedQuoteIndex","selectQuoteIndex","generateQuoteIndex","bind","assignNewQuoteIndex","componentDidMount","fetch","then","data","json","setState","selectedQuote","length","Number","isInteger","undefined","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,WAAP;AACA,OAAOC,YAAP,MAAyB,cAAzB;;AAGA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;AAC7BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,kBAAkB,EAAE;AAFT,KAAb;AAIA,SAAKC,gBAAL,GAAwB,KAAKC,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAAxB;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBD,IAAzB,CAA8B,IAA9B,CAA3B;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,uIAAD,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMR,MAAM,IAAI,KAAKW,QAAL,CAAc;AAACX,MAAAA;AAAD,KAAd,EAAwB,KAAKK,mBAA7B,CAFhB;AAGD;;AAED,MAAIO,aAAJ,GAAqB;AACnB,QAAI,CAAC,KAAKb,KAAL,CAAWC,MAAX,CAAkBa,MAAnB,IAA6B,CAACC,MAAM,CAACC,SAAP,CAAiB,KAAKhB,KAAL,CAAWE,kBAA5B,CAAlC,EAAmF;AACjF,aAAOe,SAAP;AACD;;AACD,WAAO,KAAKjB,KAAL,CAAWC,MAAX,CAAkB,KAAKD,KAAL,CAAWE,kBAA7B,CAAP;AACD;;AAEHE,EAAAA,kBAAkB,GAAI;AACpB,QAAI,CAAC,KAAKJ,KAAL,CAAWC,MAAX,CAAkBa,MAAvB,EAA+B;AAC7B;AACD;;AACD,WAAOpB,MAAM,CAAC,CAAD,EAAI,KAAKM,KAAL,CAAWC,MAAX,CAAkBa,MAAlB,GAA2B,CAA/B,CAAb;AACD;;AAEDR,EAAAA,mBAAmB,GAAI;AACrB,SAAKM,QAAL,CAAc;AAACV,MAAAA,kBAAkB,EAAE,KAAKE,kBAAL;AAArB,KAAd;AACD;;AACDc,EAAAA,MAAM,GAAI;AAET,wBACG;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,EAAE,EAAC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAE,YAAF;AAAe,MAAA,aAAa,EAAI,KAAKL,aAArC;AAAoD,MAAA,mBAAmB,EAAI,KAAKP,mBAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADH;AAKA;;AAzC8B;;AA2CjC,eAAeV,GAAf","sourcesContent":["import React from 'react';\nimport { random } from 'lodash';\nimport './App.css';\nimport QuoteMachine from 'QuoteMachine'\n\n\nclass App extends React.Component{\n    constructor(props) {\n      super(props);\n      this.state = {\n        quotes: [],\n        selectedQuoteIndex: null,\n      }\n      this.selectQuoteIndex = this.generateQuoteIndex.bind(this);\n      this.assignNewQuoteIndex = this.assignNewQuoteIndex.bind(this);\n    }\n\n    componentDidMount() {\n      fetch('https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json')\n      .then(data => data.json())\n      .then(quotes => this.setState({quotes}, this.assignNewQuoteIndex));\n    }\n  \n    get selectedQuote () {\n      if (!this.state.quotes.length || !Number.isInteger(this.state.selectedQuoteIndex)) {\n        return undefined;\n      }\n      return this.state.quotes[this.state.selectedQuoteIndex];\n    }\n\n  generateQuoteIndex () {\n    if (!this.state.quotes.length) {\n      return;\n    }\n    return random(0, this.state.quotes.length - 1);\n  }\n\n  assignNewQuoteIndex () {\n    this.setState({selectedQuoteIndex: this.generateQuoteIndex() });\n  }\n  render () {\n    \n   return (\n      <div className=\"App\" id='quote-box'>\n        < QuoteMachine selectedQuote = {this.selectedQuote} assignNewQuoteIndex = {this.assignNewQuoteIndex}/>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}